name: Create Release Builds

on:
  push:
    tags:
      - "v*" # matches v1.0.1, v1.2, v2, etc

env:
  CARGO_TERM_COLOR: always
  
jobs:
  once:
    name: Create GitHub release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create a release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: true

  build_server:
    name: Create release build and upload binaries for linux
    needs: once
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Build docker image for one stage
      uses: docker/build-push-action@v2
      with:
        context: .
        target: builder
        tags:
          lofigirl:latest
    - name: Extract binary
      run: |
        mkdir -p ${{ github.workspace }}/bin
        docker cp $(docker create lofigirl:latest):/app/target/release/lofigirl* ${{ github.workspace }}/bin
    - name: Make Zip(s)
      run: 
        7z a -tzip ${{ github.workspace }}/bin/lofigirl.zip ${{ github.workspace }}/bin/lofigirl
        7z a -tzip ${{ github.workspace }}/bin/lofigirl_standalone.zip ${{ github.workspace }}/bin/lofigirl_standalone
        7z a -tzip ${{ github.workspace }}/bin/lofigirl_server.zip ${{ github.workspace }}/bin/lofigirl_server
    - name: Upload Release Asset Client
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.once.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/bin/lofigirl.zip
        asset_name: lofigirl-linux.zip
        asset_content_type: application/octet-stream
    - name: Upload Release Asset Standalone Client
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.once.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/bin/lofigirl_standalone.zip
        asset_name: lofigirl-standalone-linux.zip
        asset_content_type: application/octet-stream
    - name: Upload Release Asset Server
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.once.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/bin/lofigirl_server.zip
        asset_name: lofigirl-server-linux.zip
        asset_content_type: application/octet-stream
  build_client:
    name: Create cross-platform release build and upload binaries
    needs: once
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Build release version
      run: cargo build --release -p lofigirl --features notify
    - name: Make Zip
      run: 
        7z a -tzip ${{ github.workspace }}/target/release/lofigirl-with-notif${{ matrix.os }}.zip ${{ github.workspace }}/target/release/lofigirl* "-x!*.d" "-x!*.pdb"
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.once.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/target/release/lofigirl-with-notif-${{ matrix.os }}.zip
        asset_name: lofigirl-with-notif-${{ matrix.os }}.zip
        asset_content_type: application/octet-stream
    